Index: src/betterinfra/Map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package betterinfra;\n\nimport battlecode.common.*;\nimport battlecode.world.MapSymmetry;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Random;\n\npublic class Map {\n    static int mapWidth;\n    static int mapHeight;\n    static MapLocation[] allySpawnLocations;\n    static MapLocation[] flagSpawnLocations;\n    static int[][] map;\n    static MapLocation center;\n    static MapLocation[] corners;\n    static MapLocation[] allyFlagLocations;\n    static ArrayList<MapLocation> neutralCrumbs;\n    static MapLocation[] enemySpawnLocations;\n    static MapLocation[] enemyFlagLocations;\n\n    public static void init(RobotController rc) {\n        mapWidth = rc.getMapWidth();\n        mapHeight = rc.getMapHeight();\n        allySpawnLocations = rc.getAllySpawnLocations();\n        enemySpawnLocations = new MapLocation[allySpawnLocations.length];\n        flagSpawnLocations = getCenters(allySpawnLocations);\n        enemyFlagLocations = new MapLocation[flagSpawnLocations.length];\n        center = getCenter();\n        corners = getFourCorners();\n        allyFlagLocations = getFlagSpawnLocations();\n        neutralCrumbs = new ArrayList<>();\n    }\n\n    public static MapLocation[] getFourCorners() {\n        MapLocation bottomLeft = new MapLocation(0, 0);\n        MapLocation bottomRight = new MapLocation(mapWidth - 1, 0);\n        MapLocation topLeft = new MapLocation(0, mapHeight - 1);\n        MapLocation topRight = new MapLocation(mapWidth - 1, mapHeight - 1);\n\n        return new MapLocation[]{topLeft, topRight, bottomLeft, bottomRight};\n    }\n\n    public static MapLocation getCenter() {\n        return new MapLocation(mapWidth/2 , mapHeight/2);\n    }\n\n    public static MapLocation getClosestLocation(MapLocation me, MapLocation[] locs) {\n        int minDistance = Integer.MAX_VALUE;\n        MapLocation closestLocation = null;\n\n        for (MapLocation loc : locs) {\n            int distance = me.distanceSquaredTo(loc);\n            if (distance < minDistance) {\n                minDistance = distance;\n                closestLocation = loc;\n            }\n        }\n\n        return closestLocation;\n    }\n\n    public static MapLocation getRandomLocation(Random rng) {\n        int randomX = rng.nextInt(mapWidth);\n        int randomY = rng.nextInt(mapHeight);\n\n        return new MapLocation(randomX, randomY);\n    }\n\n    public static void sortCoordinatesByDistance(List<MapLocation> coordinates, MapLocation target) {\n        coordinates.sort((c1, c2) -> {\n            double distance1 = c1.distanceSquaredTo(target);\n            double distance2 = c2.distanceSquaredTo(target);\n\n            return Double.compare(distance1, distance2);\n        });\n    }\n\n    public static int getQuadrant(MapLocation location) {\n        int x = location.x;\n        int y = location.y;\n        if (x < mapWidth / 2) {\n            if (y > mapHeight / 2) {\n                return 4;\n            }\n            else {\n                return 3;\n            }\n        }\n        else {\n            if (y > mapHeight / 2) {\n                return 1;\n            }\n            else {\n                return 2;\n            }\n        }\n    }\n    private static MapLocation[] getCenters(MapLocation[] spawnZones) {\n        ArrayList<MapLocation> group1 = new ArrayList<>();\n        ArrayList<MapLocation> group2 = new ArrayList<>();\n        ArrayList<MapLocation> group3 = new ArrayList<>();\n\n        for (MapLocation location : spawnZones) {\n            if (group1.isEmpty() || isInGroup(location, group1)) {\n                group1.add(location);\n            }\n            else if (group2.isEmpty() || isInGroup(location, group2)) {\n                group2.add(location);\n            }\n            else {\n                group3.add(location);\n            }\n        }\n\n        return new MapLocation[]{calculateCenters(group1), calculateCenters(group2), calculateCenters(group3)};\n    }\n\n    private static MapLocation calculateCenters(ArrayList<MapLocation> group) {\n        int x = 0;\n        int y = 0;\n        for (MapLocation mapLocation : group) {\n            x += mapLocation.x;\n            y += mapLocation.y;\n        }\n\n        return new MapLocation(x / group.size(), y / group.size());\n    }\n\n    private static boolean isInGroup(MapLocation location, ArrayList<MapLocation> group) {\n        for (MapLocation mapLocation : group) {\n            if (location.distanceSquaredTo(mapLocation) <= 9) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static MapLocation[] getFlagSpawnLocations() {\n        return new MapLocation[]{allySpawnLocations[5], allySpawnLocations[14], allySpawnLocations[23]};\n    }\n\n    public static MapLocation[] getAdjacentLocations(MapLocation location) {\n        Direction[] directions = Direction.allDirections();\n        MapLocation[] adjacentLocations = new MapLocation[directions.length];\n        for (int i = 0; i < directions.length; i++) {\n            adjacentLocations[i] = location.add(directions[i]);\n        }\n        return adjacentLocations;\n    }\n\n    public static MapLocation[] getAdjacentLocationsNoCorners(MapLocation location) {\n        Direction[] directions = Direction.cardinalDirections();\n        MapLocation[] adjacentLocations = new MapLocation[directions.length];\n        for (int i = 0; i < directions.length; i++) {\n            adjacentLocations[i] = location.add(directions[i]);\n        }\n        return adjacentLocations;\n    }\n\n    public static int locationToInt(MapLocation location) {\n        return location.x * Map.mapWidth + location.y;\n    }\n\n    public static MapLocation intToLocation(int num) {\n        int x = num / Map.mapWidth;\n        int y = num % Map.mapWidth;\n        return new MapLocation(x, y);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/betterinfra/Map.java b/src/betterinfra/Map.java
--- a/src/betterinfra/Map.java	(revision b67a68d298fb5b914fbe99134a513bc36e05454c)
+++ b/src/betterinfra/Map.java	(date 1705937052542)
@@ -98,7 +98,7 @@
             }
         }
     }
-    private static MapLocation[] getCenters(MapLocation[] spawnZones) {
+    public static MapLocation[] getCenters(MapLocation[] spawnZones) {
         ArrayList<MapLocation> group1 = new ArrayList<>();
         ArrayList<MapLocation> group2 = new ArrayList<>();
         ArrayList<MapLocation> group3 = new ArrayList<>();
Index: src/betterinfra/BotMainRoundAttackDuck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package betterinfra;\n\nimport battlecode.common.*;\n\n\npublic class BotMainRoundAttackDuck extends BotMainRoundDuck {\n\n    public static void play() throws GameActionException {\n        retrieveCrumbs();\n        if (!gettingCrumb) {\n            goingToFlag = rc.readSharedArray(Comm.ENEMY_FLAG_HELD) != 1;\n            if (goingToFlag) {\n                goToFlag();\n            } else {\n                retreat();\n            }\n        } else {\n            tryAttack();\n            tryHeal();\n        }\n    }\n\n    private static void retrieveCrumbs() throws GameActionException {\n        //Retrieve all crumb locations within robot vision radius\n        MapLocation[] crumbLocations = rc.senseNearbyCrumbs(-1);\n        if (crumbLocations.length > 0) {\n            MapLocation closestCrumb = Map.getClosestLocation(rc.getLocation(), crumbLocations);\n            rc.setIndicatorString(\"Getting Crumb\");\n            gettingCrumb = true;\n            if (rc.isMovementReady()) {\n                pf.moveTowards(closestCrumb);\n            }\n            isExploring = false;\n        } else {\n            gettingCrumb = false;\n        }\n    }\n\n    private static void goToFlag() throws GameActionException {\n        rc.setIndicatorString(\"ATTACK\");\n        tryAttack();\n        tryHeal();\n        tryMove();\n        tryAttack();\n        tryHeal();\n        tryTrap();\n    }\n\n    private static void retreat() throws GameActionException {\n        rc.setIndicatorString(\"RETREAT\");\n\n        tryAttack();\n        tryHeal();\n        tryMove();\n        tryAttack();\n        tryHeal();\n        tryTrap();\n\n    }\n\n    private static void tryMove() throws GameActionException {\n        if(!rc.isMovementReady()) return;\n        if (micro.doMicro()) return;\n        MapLocation closestEnemy = closestEnemy();\n        if (closestEnemy != null) {\n            pf.moveTowards(closestEnemy);\n            return;\n        }\n        pf.moveTowards(closestFlag(rc));\n    }\n\n    private static MapLocation closestEnemy() throws GameActionException {\n        RobotInfo[] enemies = rc.senseNearbyRobots(rc.getLocation(), GameConstants.VISION_RADIUS_SQUARED, rc.getTeam().opponent());\n        MapLocation bestTarget = null;\n        int best_dist = 100000;\n        for (RobotInfo enemy: enemies){\n            int enemy_dist = rc.getLocation().distanceSquaredTo(enemy.getLocation());\n            if (enemy_dist < best_dist) {\n                best_dist = enemy_dist;\n                bestTarget = enemy.getLocation();\n            }\n        }\n\n        return bestTarget;\n    }\n\n    private static MapLocation closestFlag(RobotController rc) throws GameActionException {\n        FlagInfo[] flags = rc.senseNearbyFlags(GameConstants.VISION_RADIUS_SQUARED, rc.getTeam().opponent());\n        if (flags.length > 0) {\n            for (FlagInfo flag : flags) {\n                if (!flag.isPickedUp())\n                    return flag.getLocation();\n            }\n        }\n\n        int mindist = 100000;\n        MapLocation closestFlag = null;\n        MapLocation[] flagLocations = rc.senseBroadcastFlagLocations();\n        for (MapLocation flagLoc : flagLocations){\n            int flagDist = rc.getLocation().distanceSquaredTo(flagLoc);\n            if (flagDist < mindist){\n                mindist = flagDist;\n                closestFlag = flagLoc;\n            }\n        }\n        if (closestFlag != null){\n            return closestFlag;\n        }\n\n        return getRandomTarget(15);\n    }\n\n    private static MapLocation getRandomTarget(int tries) {\n        MapLocation myLoc = rc.getLocation();\n        int maxX = rc.getMapWidth();\n        int maxY = rc.getMapHeight();\n        MapLocation exploreLoc = null;\n        while(tries-- > 0){\n            MapLocation newLoc = new MapLocation((int)(Math.random()*maxX), (int)(Math.random()*maxY));\n            if (myLoc.distanceSquaredTo(newLoc) > GameConstants.VISION_RADIUS_SQUARED){\n                exploreLoc = newLoc;\n            }\n        }\n        return exploreLoc;\n    }\n\n    public static void tryTrap() throws GameActionException {\n        if (rc.getCrumbs() > 500) {\n            RobotInfo[] oppRobotInfos = rc.senseNearbyRobots(-1, rc.getTeam().opponent());\n            if (oppRobotInfos.length > 0) {\n                MapLocation me = rc.getLocation();\n                Direction dir = me.directionTo(closestEnemy(rc, oppRobotInfos));\n                if (rc.canBuild(TrapType.EXPLOSIVE, me.add(dir))) {\n                    rc.build(TrapType.EXPLOSIVE, me.add(dir));\n                }\n                else if (rc.canBuild(TrapType.EXPLOSIVE, me)) {\n                    rc.build(TrapType.EXPLOSIVE, me);\n                }\n            }\n        }\n    }\n\n    public static MapLocation closestEnemy(RobotController rc, RobotInfo[] robotInfos) {\n        MapLocation[] mapLocations = new MapLocation[robotInfos.length];\n        for (int i = 0; i < robotInfos.length; i++) {\n            mapLocations[i] = robotInfos[i].getLocation();\n        }\n\n        return Map.getClosestLocation(rc.getLocation(), mapLocations);\n    }\n\n    private static void tryAttack() throws GameActionException {\n        if(!rc.isActionReady()) return;\n        RobotInfo[] enemies = rc.senseNearbyRobots(GameConstants.ATTACK_RADIUS_SQUARED, rc.getTeam().opponent());\n        AttackTarget bestTarget = null;\n\n        for (RobotInfo enemy : enemies) {\n            if (rc.canAttack(enemy.location)){\n                AttackTarget at = new AttackTarget(enemy);\n                if (at.isBetterThan(bestTarget)) bestTarget = at;\n            }\n        }\n        if (bestTarget != null && rc.canAttack(bestTarget.mloc)) {\n            rc.attack(bestTarget.mloc);\n        }\n    }\n\n    private static void tryHeal() throws GameActionException {\n        if(!rc.isActionReady()) return;\n        RobotInfo[] allyRobots = rc.senseNearbyRobots(GameConstants.HEAL_RADIUS_SQUARED, rc.getTeam());\n        HealingTarget bestTarget =  null;\n        for (RobotInfo r : allyRobots) {\n            if (rc.canHeal(r.getLocation())) {\n                HealingTarget hl = new HealingTarget(r);\n                if (hl.isBetterThan(bestTarget)) bestTarget = hl;\n            }\n        }\n        if(bestTarget != null && rc.canHeal(bestTarget.mloc)){\n            rc.heal(bestTarget.mloc);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/betterinfra/BotMainRoundAttackDuck.java b/src/betterinfra/BotMainRoundAttackDuck.java
--- a/src/betterinfra/BotMainRoundAttackDuck.java	(revision b67a68d298fb5b914fbe99134a513bc36e05454c)
+++ b/src/betterinfra/BotMainRoundAttackDuck.java	(date 1705937578463)
@@ -2,6 +2,8 @@
 
 import battlecode.common.*;
 
+import java.util.Arrays;
+
 
 public class BotMainRoundAttackDuck extends BotMainRoundDuck {
 
@@ -84,6 +86,25 @@
         return bestTarget;
     }
 
+
+    private static void updateFlagGuess(RobotController rc) throws GameActionException {
+        MapLocation[] flagLocations = rc.senseBroadcastFlagLocations();
+        int i = 0;
+        for (MapLocation flag : flagLocations) {
+            boolean possible = false;
+            for (MapLocation enemyFlag : Map.enemyFlagLocations) {
+                if (flag.distanceSquaredTo(enemyFlag) <= 100) {
+                    possible = true;
+                }
+            }
+            if (!possible) {
+                Map.enemyFlagLocations[i] = flag;
+            }
+            i++;
+        }
+
+    }
+
     private static MapLocation closestFlag(RobotController rc) throws GameActionException {
         FlagInfo[] flags = rc.senseNearbyFlags(GameConstants.VISION_RADIUS_SQUARED, rc.getTeam().opponent());
         if (flags.length > 0) {
Index: src/betterinfra/BotSetupExploreDuck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package betterinfra;\n\nimport battlecode.common.*;\n\nimport java.util.Arrays;\n\npublic class BotSetupExploreDuck extends BotSetupDuck {\n    static MapLocation setupLocation;\n\n    public static void play() throws GameActionException {\n        updateGlobals();\n        if (!rc.isSpawned()) {\n            init();\n        }\n        if (rc.isSpawned()) {\n            if (Comm.needSymmetryReport && rc.canWriteSharedArray(0, 0)) {\n                Comm.reportSym();\n                Comm.commit_write();\n            }\n            MapRecorder.recordSym(500);\n\n            if (!reachedTarget && turnCount < Constants.EXPLORE_ROUNDS) {\n                explore();\n            } else {\n                lineUpAtDam();\n            }\n\n        }\n    }\n\n    public static void exit() throws GameActionException {\n        updateFlagLocations();\n    }\n    \n    public static boolean init() throws GameActionException {\n        int val = rc.readSharedArray(Comm.EXPLORER_COMM);\n        setupLocation = new MapLocation(0, 0);\n        rc.writeSharedArray(12, 4444);\n        if (val < 4) {\n            if (trySpawn()) {\n                exploreLocation = Map.corners[val];\n                rc.writeSharedArray(Comm.EXPLORER_COMM, val + 1);\n                isExploring = true;\n                rc.setIndicatorString(String.valueOf(exploreLocation));\n            }\n        }\n\n        else if (val == 4) { //center\n            if (trySpawn()) {\n                exploreLocation = Map.center;\n                rc.writeSharedArray(Comm.EXPLORER_COMM, val + 1);\n                isExploring = true;\n                rc.setIndicatorString(\"Center \" + exploreLocation);\n                return true;\n            }\n        }\n        else { // random location\n            MapLocation target = Map.getRandomLocation(rng);\n            if (trySpawn()) {\n                exploreLocation = target;\n                isExploring = true;\n                rc.setIndicatorString(\"Explorer \" + exploreLocation);\n            }\n        }\n        return false;\n    }\n\n    private static void updateFlagLocations() throws GameActionException {\n        for (int i = 1; i < 4; i++) {\n            MapLocation location = Map.intToLocation(rc.readSharedArray(i));\n            Map.allyFlagLocations[i-1] = location;\n        }\n    }\n\n    private static void lineUpAtDam() throws GameActionException {\n       if (isNextToDam()) {\n           reachedTarget = true;\n           comEmptySpotsNextToDam();\n           return;\n       }\n\n       MapInfo[] mapInfos = rc.senseNearbyMapInfos(-1);\n\n       for (MapInfo mapInfo : mapInfos) {\n            if (mapInfo.isDam() && mapInfo.getTeamTerritory() == Team.NEUTRAL) {\n                MapLocation[] adjacent = Map.getAdjacentLocationsNoCorners(mapInfo.getMapLocation());\n                for (MapLocation location : adjacent) {\n                    if (rc.canSenseLocation(location)) {\n                        MapInfo adjInfo = rc.senseMapInfo(location);\n                        if (adjInfo.getTeamTerritory() == rc.getTeam() && !rc.canSenseRobotAtLocation(location) && adjInfo.isPassable()) {\n                            pf.moveTowards(location);\n                            return;\n                        }\n                    }\n                }\n            }\n       }\n       if (rc.readSharedArray(12) != 4444){\n           setupLocation = Map.intToLocation(rc.readSharedArray(12));\n       }\n       else {\n           setupLocation = Map.center;\n       }\n       pf.moveTowards(setupLocation);\n    }\n\n    private static void comEmptySpotsNextToDam() throws GameActionException {\n        MapInfo[] mapInfos = rc.senseNearbyMapInfos(-1);\n        for (MapInfo mapInfo : mapInfos) {\n            if (mapInfo.isDam() && mapInfo.getTeamTerritory() == Team.NEUTRAL) {\n                MapLocation[] adjacent = Map.getAdjacentLocationsNoCorners(mapInfo.getMapLocation());\n                for (MapLocation location : adjacent) {\n                    if (rc.canSenseLocation(location)) {\n                        MapInfo adjInfo = rc.senseMapInfo(location);\n                        if (adjInfo.getTeamTerritory() == rc.getTeam() && !rc.canSenseRobotAtLocation(location)) {\n                            rc.writeSharedArray(12, Map.locationToInt(location));\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private static boolean isNextToDam() throws GameActionException {\n        MapLocation[] adjacent = Map.getAdjacentLocationsNoCorners(rc.getLocation());\n        for (MapLocation adj : adjacent) {\n            if (rc.canSenseLocation(adj)) {\n                if (rc.senseMapInfo(adj).isDam()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private static void explore() throws GameActionException {\n        isExploring = true;\n        if (flagDuck == 0)\n            retrieveCrumbs();\n        if (isExploring) {\n            if (rc.isMovementReady()) {\n                pf.moveTowards(exploreLocation);\n            }\n        }\n    }\n\n    private static void retrieveCrumbs() throws GameActionException {\n        //Retrieve all crumb locations within robot vision radius\n        MapLocation[] crumbLocations = rc.senseNearbyCrumbs(-1);\n        if (crumbLocations.length > 0) {\n            MapLocation closestCrumb = Map.getClosestLocation(rc.getLocation(), crumbLocations);\n            if (rc.senseMapInfo(closestCrumb).getTeamTerritory() == rc.getTeam()) {\n                rc.setIndicatorString(\"Getting Crumb\");\n                gettingCrumb = true;\n                if (rc.isMovementReady()) {\n                    pf.moveTowards(closestCrumb);\n                }\n                isExploring = false;\n            }\n            else {\n                gettingCrumb = false;\n            }\n        } else {\n            gettingCrumb = false;\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/betterinfra/BotSetupExploreDuck.java b/src/betterinfra/BotSetupExploreDuck.java
--- a/src/betterinfra/BotSetupExploreDuck.java	(revision b67a68d298fb5b914fbe99134a513bc36e05454c)
+++ b/src/betterinfra/BotSetupExploreDuck.java	(date 1705937060348)
@@ -29,6 +29,9 @@
     }
 
     public static void exit() throws GameActionException {
+        System.out.println(Comm.isSymmetryConfirmed);
+        System.out.println(Comm.symmetry);
+        guessFlagLocations();
         updateFlagLocations();
     }
     
@@ -65,6 +68,10 @@
         return false;
     }
 
+    private static void guessFlagLocations() {
+        Map.enemyFlagLocations = Map.getCenters(Map.enemySpawnLocations);
+    }
+
     private static void updateFlagLocations() throws GameActionException {
         for (int i = 1; i < 4; i++) {
             MapLocation location = Map.intToLocation(rc.readSharedArray(i));
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"d349e976-9e03-4690-82b0-71db621ae28a\" name=\"Changes\" comment=\"determine symmetry\">\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/checksums/sha1-checksums.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/checksums/sha1-checksums.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/gradlew.bat\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/gradlew.bat\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/betterinfra/BotMainRoundAttackDuck.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/betterinfra/BotMainRoundAttackDuck.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/betterinfra/Micro.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/betterinfra/Micro.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/betterinfra/PathFind.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/betterinfra/PathFind.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"ExternalProjectsManager\">\n    <system id=\"GRADLE\">\n      <state>\n        <task path=\"$PROJECT_DIR$\">\n          <activation />\n        </task>\n        <projects_view>\n          <tree_state>\n            <expand>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"Battlecode2024\" type=\"f1a62948:ProjectNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"Battlecode2024\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"Battlecode2024\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n                <item name=\"battlecode\" type=\"c8890929:TasksNode$1\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"Battlecode2024\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n                <item name=\"build\" type=\"c8890929:TasksNode$1\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"Battlecode2024\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n                <item name=\"build setup\" type=\"c8890929:TasksNode$1\" />\n              </path>\n            </expand>\n            <select />\n          </tree_state>\n        </projects_view>\n      </state>\n    </system>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"main\" />\n  </component>\n  <component name=\"Git.Rebase.Settings\">\n    <option name=\"NEW_BASE\" value=\"main\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"setup-phase-sprint2\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2ahGw7NiBjM8xgrano9UbNVld7h\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Gradle.Battlecode2024 [build].executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Battlecode2024 [run].executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Battlecode2024 [update].executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Battlecode2024 [wrapper].executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Battlecode2024 [zipForSubmit].executor&quot;: &quot;Run&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/louishu/Battlecode2024/build.gradle&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/betterinfra\" />\n      <recent name=\"$PROJECT_DIR$/src/sprintv2\" />\n      <recent name=\"$PROJECT_DIR$/src\" />\n    </key>\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\n      <recent name=\"betterinfra\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Gradle.Battlecode2024 [wrapper]\">\n    <configuration name=\"Battlecode2024 [build]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"build\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Battlecode2024 [run]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"run\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Battlecode2024 [update]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"update\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Battlecode2024 [wrapper]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"wrapper\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Battlecode2024 [zipForSubmit]\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\"zipForSubmit\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Gradle.Battlecode2024 [wrapper]\" />\n        <item itemvalue=\"Gradle.Battlecode2024 [build]\" />\n        <item itemvalue=\"Gradle.Battlecode2024 [update]\" />\n        <item itemvalue=\"Gradle.Battlecode2024 [zipForSubmit]\" />\n        <item itemvalue=\"Gradle.Battlecode2024 [run]\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"jdk-1.8.0_392-corretto-1.8.0_392-3183f394aec4-22f8fbaa\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"d349e976-9e03-4690-82b0-71db621ae28a\" name=\"Changes\" comment=\"\" />\n      <created>1704763634222</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1704763634222</updated>\n      <workItem from=\"1704763635629\" duration=\"4158000\" />\n      <workItem from=\"1704902255379\" duration=\"66017000\" />\n      <workItem from=\"1705171454782\" duration=\"19466000\" />\n      <workItem from=\"1705285006208\" duration=\"1701000\" />\n      <workItem from=\"1705430766229\" duration=\"1089000\" />\n      <workItem from=\"1705460671309\" duration=\"10768000\" />\n      <workItem from=\"1705503821195\" duration=\"144000\" />\n      <workItem from=\"1705505348636\" duration=\"1215000\" />\n      <workItem from=\"1705901245729\" duration=\"932000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"status phase\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705077547331</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705077547331</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"status phase improved\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705116734704</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705116734704</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"better defense setup\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705181668924</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705181668924</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"better defense setup\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705249332772</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705249332772</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"flag defense macro\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705267057343</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705267057343</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"opponent\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705267293857</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705267293857</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"opponent\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705267714983</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705267714983</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"improved code quality\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705272918009</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705272918009</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"improved code quality\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705284756015</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705284756015</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"improved code quality\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705284801490</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705284801490</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"fixed merge conflicts\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705285439203</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705285439203</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\".\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705286616181</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705286616181</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"stun traps during main + other improvements\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705300210820</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705300210820</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"focus flag attack and heal\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705301236573</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705301236573</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"focus flag attack and heal\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705301263680</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705301263680</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"focus flag attack and heal\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705301281318</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705301281318</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"smart spawning to spawn near flags if getting attacked; prio for crumbs in main phase; flag ducks farm to lv 6 build before building.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705306761652</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705306761652</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"line up at dam, kinda works.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705530241955</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705530241955</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"line up at dam, kinda works.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705533000610</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705533000610</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"determine symmetry\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705785672236</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705785672236</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"21\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"status phase\" />\n    <MESSAGE value=\"status phase improved\" />\n    <MESSAGE value=\"better defense setup\" />\n    <MESSAGE value=\"flag defense macro\" />\n    <MESSAGE value=\"opponent\" />\n    <MESSAGE value=\"improved code quality\" />\n    <MESSAGE value=\"fixed merge conflicts\" />\n    <MESSAGE value=\".\" />\n    <MESSAGE value=\"stun traps during main + other improvements\" />\n    <MESSAGE value=\"focus flag attack and heal\" />\n    <MESSAGE value=\"smart spawning to spawn near flags if getting attacked; prio for crumbs in main phase; flag ducks farm to lv 6 build before building.\" />\n    <MESSAGE value=\"line up at dam, kinda works.\" />\n    <MESSAGE value=\"determine symmetry\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"determine symmetry\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/initialrobot/Map.java</url>\n          <line>101</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b67a68d298fb5b914fbe99134a513bc36e05454c)
+++ b/.idea/workspace.xml	(date 1705937052625)
@@ -5,14 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d349e976-9e03-4690-82b0-71db621ae28a" name="Changes" comment="determine symmetry">
-      <change beforePath="$PROJECT_DIR$/.gradle/7.6/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/checksums/sha1-checksums.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/gradlew.bat" beforeDir="false" afterPath="$PROJECT_DIR$/gradlew.bat" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/betterinfra/BotMainRoundAttackDuck.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/betterinfra/BotMainRoundAttackDuck.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/betterinfra/Micro.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/betterinfra/Micro.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/betterinfra/PathFind.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/betterinfra/PathFind.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/betterinfra/BotSetupExploreDuck.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/betterinfra/BotSetupExploreDuck.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/betterinfra/Map.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/betterinfra/Map.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -31,6 +27,7 @@
           <activation />
         </task>
         <projects_view>
+          <option name="groupModules" value="false" />
           <tree_state>
             <expand>
               <path>
@@ -96,22 +93,22 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Gradle.Battlecode2024 [build].executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.Battlecode2024 [run].executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.Battlecode2024 [update].executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.Battlecode2024 [wrapper].executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.Battlecode2024 [zipForSubmit].executor&quot;: &quot;Run&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/Users/louishu/Battlecode2024/build.gradle&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Gradle.Battlecode2024 [build].executor": "Run",
+    "Gradle.Battlecode2024 [run].executor": "Run",
+    "Gradle.Battlecode2024 [update].executor": "Run",
+    "Gradle.Battlecode2024 [wrapper].executor": "Run",
+    "Gradle.Battlecode2024 [zipForSubmit].executor": "Run",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "setup-phase-v3",
+    "last_opened_file_path": "/Users/louishu/Battlecode2024/build.gradle",
+    "node.js.detected.package.eslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/src/betterinfra" />
@@ -142,6 +139,7 @@
       <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
+      <RunAsTest>false</RunAsTest>
       <method v="2" />
     </configuration>
     <configuration name="Battlecode2024 [run]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
@@ -163,6 +161,7 @@
       <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
+      <RunAsTest>false</RunAsTest>
       <method v="2" />
     </configuration>
     <configuration name="Battlecode2024 [update]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
@@ -184,6 +183,7 @@
       <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
+      <RunAsTest>false</RunAsTest>
       <method v="2" />
     </configuration>
     <configuration name="Battlecode2024 [wrapper]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
@@ -205,6 +205,7 @@
       <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
+      <RunAsTest>false</RunAsTest>
       <method v="2" />
     </configuration>
     <configuration name="Battlecode2024 [zipForSubmit]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
@@ -226,6 +227,7 @@
       <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
       <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
       <DebugAllEnabled>false</DebugAllEnabled>
+      <RunAsTest>false</RunAsTest>
       <method v="2" />
     </configuration>
     <recent_temporary>
